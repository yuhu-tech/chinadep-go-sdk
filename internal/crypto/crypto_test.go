package crypto

import (
	"reflect"
	"testing"
)

func TestSumSM3(t *testing.T) {
	type args struct {
		data []byte
	}
	var tests = []struct {
		name string
		args args
		want []byte
	}{
		{
			name: "test",
			args: args{data: []byte("test")},
			want: []byte{0x55, 0xE1, 0x2E, 0x91, 0x65, 0x0D, 0x2F, 0xEC, 0x56, 0xEC, 0x74, 0xE1, 0xD3, 0xE4, 0xDD, 0xBF, 0xCE, 0x2E, 0xF3, 0xA6, 0x58, 0x90, 0xC2, 0xA1, 0x9E, 0xCF, 0x88, 0xA3, 0x07, 0xE7, 0x6A, 0x23},
		},
		{
			name: "chinadep-go-sdk",
			args: args{data: []byte("chinadep-go-sdk")},
			want: []byte{0xBE, 0x71, 0x68, 0xE5, 0x37, 0xA3, 0x6F, 0x56, 0x69, 0x80, 0x85, 0xD7, 0x63, 0x2D, 0x9D, 0x7A, 0xBE, 0x0D, 0xD5, 0xF6, 0x53, 0x6E, 0x4D, 0x3F, 0xE3, 0x5A, 0xFC, 0x23, 0xE1, 0xA0, 0x84, 0xCE},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := SumSM3(tt.args.data); !reflect.DeepEqual(got, tt.want) {
				t.Errorf("SumSM3() = %v, want %v", got, tt.want)
			}
		})
	}
}
